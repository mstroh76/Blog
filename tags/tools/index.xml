<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Blog</title>
    <link>https://mstroh76.github.io/Blog/tags/tools/</link>
    <description>Recent content in Tools on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2021, Martin Strohmayer</copyright>
    <lastBuildDate>Wed, 14 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mstroh76.github.io/Blog/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Raspberry Pi Werkzeuge</title>
      <link>https://mstroh76.github.io/Blog/post/tools/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mstroh76.github.io/Blog/post/tools/</guid>
      <description>
        
          &lt;p&gt;Der Raspberry Pi ist eine ganz spezielle Computerhardware, so gibt es auch Werkzeuge die speziell für den Raspberry Pi gemacht oder angepasst wurden. Die folgende Liste stellt einige von ihnen vor.&lt;/p&gt;
&lt;h2 id=&#34;beschreibung&#34;&gt;Beschreibung&lt;/h2&gt;
&lt;p&gt;Auch wenn es inzwischen viele verschiedene Einplatinencomputer gibt, so ist der Raspberry Pi doch sehr speziell. Der SoC und die enthaltene Grafikkarte ist kaum wo anders in Einsatz.
Daher gibt es speziell an die Raspberry Pi und der GPU angepasste Werkzeuge. Die folgende List ist sicher nicht komplett aber einige Werkzeuge sind mir unter gekommen, die ich besonders gerne einsetze.&lt;/p&gt;
&lt;h2 id=&#34;werkzeuge&#34;&gt;Werkzeuge&lt;/h2&gt;
&lt;h3 id=&#34;screenshot---raspi2png&#34;&gt;Screenshot - raspi2png&lt;/h3&gt;
&lt;p&gt;Mit &lt;a href=&#34;https://github.com/GrazerComputerClub/raspi2png&#34;&gt;raspi2png&lt;/a&gt; kann man Screenshots im PNG-Format erzeugen. Das besondere daran ist, dass es direkt mit der GPU der Raspberry Pi zusammenarbeitet.
Dadurch kann es auch Screenshots erzeugen wo andere Programme wie z.B. &lt;a href=&#34;https://wiki.ubuntuusers.de/Scrot/&#34;&gt;scrot&lt;/a&gt; nicht funktionieren. Das ist bei allen Programm der Fall die direkt in der GPU arbeiten. Videos abspielen und Minecraft Pi sind solche Anwendungen bei denen nur raspi2png funktioniert.&lt;br&gt;
Das Programm war nicht optimal für den Einsatz mit einem Hotkey ausgelegt und so habe ich es kurzerhand erweitert und optimiert. Darum empfehle ich auch den Fork der auf der Git-Hub Seite des Grazer Computer Clubs liegt. Das originale Projekt ist auf &lt;a href=&#34;https://github.com/AndrewFromMelbourne/raspi2png&#34;&gt;https://github.com/AndrewFromMelbourne/raspi2png&lt;/a&gt; verfügbar.&lt;/p&gt;
&lt;h3 id=&#34;vnc-server---dispmanx_vnc&#34;&gt;VNC Server - dispmanx_vnc&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/patrikolausson/dispmanx_vnc&#34;&gt;dispmanx_vnc&lt;/a&gt; ist eine &lt;a href=&#34;https://de.wikipedia.org/wiki/Virtual_Network_Computing&#34;&gt;VNC Server&lt;/a&gt; mit dem man die grafische Oberfläche auf einen VNC-Client übertragen kann. Es gibt natürlich andere VNC Server, die allerings unter X11 laufen. dispmanx_vnc stellt direkt den Inhalt der GPU zur Verfügung. Das hat zum einen den Vorteil der guten Performance aber der Hauptgrund warum das Tool so besonders ist, ist das es in jeder Situation funktioniert. Ob man sich in der Konsole oder in X11 befindet ist egal, ob eine Video abgespielt wird oder Minecraft Pi gespielt wird - egal - die Übertragung per VNC funktioniert. Sogar eine Kodi Oberflache kann übertragen werden.&lt;br&gt;
Allerdings hat das Programm auch Nachteile. Das Projekt wurde von &lt;a href=&#34;https://github.com/hanzelpeter/dispmanx_vnc&#34;&gt;https://github.com/hanzelpeter/dispmanx_vnc&lt;/a&gt; geforkt und verbessert. Allerdings wurde die Lizenz entfernt was nun dazu führt, dass es eigentlich nicht mehr unter einen freien Lizenz verfügbar ist. Das originale Projekt kann man aber nicht empfehlen. Weiters wurden die Umsetzung der Tastencodes wenn der VNC-Client eingaben tätig, fix kodiert. Das bewirkt, dass immer ein amerikanisches Tastaturlayout verwendet wird und dieses noch zusätzlich nicht komplett umgesetzt wurde.
Aufgrund des Lizenzproblem kann ich auch das Problem nicht beheben.&lt;br&gt;
Dennoch für die Weiterleitung der grafische Oberfäche ist es aufgrund der Performance und universellen Einsetzbarkeit der VNC Server den ich empfehlen würde. Auf dem Blog des Grazer Computer Clubs gibt es einen Beitrag &lt;a href=&#34;https://blog.gc2.at/post/vnc/&#34;&gt;VNC - Virtual Network Computing&lt;/a&gt; speziell zu dem Programm.&lt;/p&gt;
&lt;h3 id=&#34;hotkey---triggerhappy&#34;&gt;Hotkey - triggerhappy&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://manpages.ubuntu.com/manpages/precise/man1/thd.1.html&#34;&gt;triggerhappy&lt;/a&gt; ist nichts Raspberry Pi spezifisches, es ist aber auf Raspberry Pi OS vorinstalliert. Das Programm ermöglicht es Tastatur-Hotkeys zu definieren ohne das X11 oder ähnliches läuft. Damit kann man z. B. Multimedia-Tasten wie Lauter und Leiser auch auf einem Raspberry Pi zum Funktionieren bringen.
Auch hierzu gibt es auf dem Blog des Grazer Computer Clubs den Beitrag &lt;a href=&#34;https://blog.gc2.at/post/hotkeys-zuweisen-ohne-x11/&#34;&gt;Hotkeys zuweisen ohne X11&lt;/a&gt; speziell zu dem Programm.&lt;/p&gt;
&lt;h3 id=&#34;system-monitorprozessmanager---htop&#34;&gt;System Monitor/Prozessmanager - htop&lt;/h3&gt;
&lt;p&gt;htop ist eine altbekanntes Diagnose Program bzw. Prozessmanager. In letzter Zeit ist nun wieder dynamik in die Entwicklung gekommen, nachdem lange Zeit nicht passiert ist. Das Projekt ist nun auf &lt;a href=&#34;https://github.com/htop-dev/htop&#34;&gt;https://github.com/htop-dev/htop&lt;/a&gt; verfügbar und mitlerweile auf Version 3. Es kursieren aber noch einige Forks. Besonders die Armbian Version sticht durch zusätzlich Features für ARM Prozessoren heraus. Es ist nun möglich die aktuelle CPU-Frequenz und CPU-Temperatur im Kopf anzeigen zu lassen. Vor vielen Jahren wurde bereits so eine Version für den Raspberry Pi vorgestellt. Auf &lt;a href=&#34;https://github.com/hishamhm/htop&#34;&gt;https://github.com/hishamhm/htop&lt;/a&gt; ist sie zu finden. Sie basiert allerdings auf einer alten htop Version 2 von 2018. Sie gilt aktuell also nur noch als Archiv.&lt;br&gt;
Ausgehend von dieser Version haben ich auch einige Änderungen eingebraucht, die vorallem die Farben für die Anzeige der CPU-Temperatur und CPU-Frequenz anpassen soll. Inwieweit diese Änderungen auch in einer Version 3 enthalten sind, bzw. übernehmbar wären, ist mir nicht bekannt. Aktuell wird bei Raspberry Pi OS aber die alte Version 2 eingesetzt und so kann ein Update auf die Version vom Grazer Computer Club einen Mehrwert bringen. Sie ist unter &lt;a href=&#34;https://github.com/GrazerComputerClub/htop&#34;&gt;https://github.com/GrazerComputerClub/htop&lt;/a&gt; verfügbar. Im übrigen kann man die neuen Anzeigen mit der Taste F2 hinzufügen!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/htop_Pi1.png&#34; alt=&#34;htop Raspberry Pi 1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sd-karten-schreiben---raspberry-pi-imager-und-usb-imager&#34;&gt;SD Karten Schreiben - Raspberry Pi Imager und USB Imager&lt;/h3&gt;
&lt;p&gt;Lange Zeit hatte es keine sinnvolles Werkzeug zum Beschreiben einer SD-Karte unter Linux gegeben. Das Programm wird benötigt um ein Raspberry Pi Image bzw. Betriebssystem Image auf die SD-Karte zu bringen. Anfänglich musste man dd verwenden, das für Anfänger einfach zu viele Gefahren birgt. Danach kamm das Programm etcher, dass den Vorgang wesentlich sicherer und einfacher machte. Das Programm selbst ist aber etwas zwielichtig. Es ist riesig und muss als eigenständiges Programm heruntergeladen und ausgeführt werden.&lt;br&gt;
Nun gibt es endlich das Programm Raspberry Pi Imager und USB Imager, dass diesen Dienst verrichtet und nur minimale Anforderungen stellt. Ich würde Raspberry Pi Imager empfehlen. Einfach deb-Packet herunterladen und mit &lt;code&gt;sudo apt install ./imager_1.6.1_amd64.deb&lt;/code&gt; installieren.&lt;/p&gt;
&lt;p&gt;Raspberry Pi Imager - &lt;a href=&#34;https://www.raspberrypi.org/software/&#34;&gt;https://www.raspberrypi.org/software/&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;../../images/Raspberry_Pi_Imager_v1.6.1.png&#34; alt=&#34;Raspberry Pi Imager Dialog&#34;&gt;&lt;/p&gt;
&lt;p&gt;USB Imager - &lt;a href=&#34;https://gitlab.com/bztsrc/usbimager&#34;&gt;https://gitlab.com/bztsrc/usbimager&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;../../images/USBImager_1.0.6.png&#34; alt=&#34;USB Imager Dialog&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;spi-lcd-tft-anzeige---fbcp-ili9341&#34;&gt;SPI LCD-TFT Anzeige - fbcp-ili9341&lt;/h3&gt;
&lt;p&gt;Bei Kernel 4 konnte man noch einen SPI LCD-TFT Display über ein Kernel Modul ansprechen. Leider ist das mit Kernel 5 nun nicht mehr möglich. Zum Glück gibt es aber ein Programm mit dem verwirrenden Namen &lt;a href=&#34;https://github.com/juj/fbcp-ili9341&#34;&gt;fbcp-ili9341&lt;/a&gt;. fbcp steht dabei für Framebuffer copy und ili9341 für den gleichnamigen SPI Display Controller. Das Programm kann also den Inhalt der Grafikkarte (Framebuffer) über den SPI-Bus auf das LCD-TFT Display übertragen. Das ganze läuft nun etwas langsamer als früher im Userspace, kann aber überzeugen.&lt;br&gt;
Auch hierzu gibt es auf dem Blog des Grazer Computer Clubs den Beitrag &lt;a href=&#34;https://blog.gc2.at/post/spi-tft-lcd-kernel5/&#34;&gt;SPI TFT LCD - Kernel 5&lt;/a&gt;. Im übrigen Unterstützt das Programm auch andere SPI Controller wie ST7735R und ST7789VW.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/fbcp-ili9341.jpg&#34; alt=&#34;fbcp-ili9341 sowie dispmanx_vnc im Einsatz&#34;&gt;&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
