<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ESP8266 on Blog</title>
    <link>https://mstroh76.github.io/Blog/tags/esp8266/</link>
    <description>Recent content in ESP8266 on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2021, Martin Strohmayer</copyright>
    <lastBuildDate>Fri, 08 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mstroh76.github.io/Blog/tags/esp8266/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WLED LED-Streifen mit ESP8266</title>
      <link>https://mstroh76.github.io/Blog/post/wled/</link>
      <pubDate>Fri, 08 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mstroh76.github.io/Blog/post/wled/</guid>
      <description>
        
          &lt;p&gt;Einen über WLAN konfigurier und steuerbaren LED-Streifen ist denkbar einfach zu realisieren.&lt;/p&gt;
&lt;h2 id=&#34;beschreibung&#34;&gt;Beschreibung&lt;/h2&gt;
&lt;p&gt;Einen über WLAN konfigurier- und steuerbaren LED-Streifen ist denkbar einfach zu realisieren. Die Harware ist kostengünstig, die Verkabelung und Installation einfach, die Parametrierbarkeit enorm.
Man muss lediglich folgende Komponetnen haben&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LED Streifen mit WS2812 Chip (3-Polig), beliebig lang z. B. 30 LEDs&lt;/li&gt;
&lt;li&gt;ESP 8266 Board mit USB Anschluss (z.B. D1 Mini ESP8266)&lt;/li&gt;
&lt;li&gt;USB-Kabel und 5V Netzteil oder USB-Ausgang&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Man könnte es auch mit einem ESP-01 Board realisieren, aber dann muss man sich um die 5 V und 3,3 V Anschluss und Versorgung kümmern. Einfacher ist es gleich ein kostengünstiges D1 Mini Board zu verwenden. Es kann über einen Micro-USB-Anschluss programmiert und versorgt werden. Allerdings sollte man dann nicht zu viele LED ansteuern bzw. die Stromaufnahme mit der WLED Konfiguration  reduzieren (es wird empfohlen unter 1 A zu bleiben). Ansonsten müsste man ein eigenes Netzteil bzw. Versorgung für den LED-Streifen vorsehen.
Wir werden hier die einfacher Lösung, mit  der Versorgung über das ESP-Board verwenden und die LED-Leistung in WLED optimieren.&lt;/p&gt;
&lt;h2 id=&#34;anschluss&#34;&gt;Anschluss&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ESP&lt;/th&gt;
&lt;th&gt;LED-Stripe&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;td&gt;+5V (Plus)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;- (Minus)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D4&lt;/td&gt;
&lt;td&gt;Di (Data)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;D4 ist beim ESP GPIO2.&lt;/p&gt;
&lt;h2 id=&#34;installation-wled&#34;&gt;Installation WLED&lt;/h2&gt;
&lt;h3 id=&#34;usb-port-check&#34;&gt;USB Port Check&lt;/h3&gt;
&lt;p&gt;Bevor es nun zur Installation geht muss man überprüfen ob das ESP-Board am Linux System erkannt wird.&lt;/p&gt;
&lt;p&gt;ESP serielle Schnittstelle überprüfen:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;dmesg | tail -n 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;[ 1972.709131] usb 2-2: New USB device found, idVendor=1a86, idProduct=7523, bcdDevice= 2.54
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;[ 1972.709146] usb 2-2: New USB device strings: Mfr=0, Product=2, SerialNumber=0
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;[ 1972.709152] usb 2-2: Product: USB2.0-Ser!
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;[ 1972.710859] ch341 2-2:1.0: ch341-uart converter detected
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;[ 1972.711342] ch341-uart ttyUSB0: break control not supported, using simulated break
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;[ 1972.711995] usb 2-2: ch341-uart converter now attached to ttyUSB0
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;[ 1973.267032] input: BRLTTY 6.4 Linux Screen Driver Keyboard as /devices/virtual/input/input40
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;[ 1973.385261] usb 2-2: usbfs: interface 0 claimed by ch341 while &amp;#39;brltty&amp;#39; sets config #1
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;[ 1973.385623] ch341-uart ttyUSB0: ch341-uart converter now disconnected from ttyUSB0
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;[ 1973.385643] ch341 2-2:1.0: device disconnected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Der USB-Port des ESP sollte also ttyUSB0 sein. Aber da gibt es einen Fehler mit BRLTTY.
BRLTTY ist &amp;quot;Braille Device Support&amp;quot; also ein Dienst für Blinde Menschen. Wir also zumeist nicht benötigt werden.
Wir deaktivieren den Dienst der die nutzung des ttyUSB0 Ports verhindert.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo systemctl stop brltty
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo systemctl disable brltty
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;sudo systemctl stop brltty-udev
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;sudo systemctl mask brltty-udev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nun kann man nochmal ab und anstecken.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;dmesg | tail -n 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;[ 3542.820230] usb 2-2: new full-speed USB device number 16 using xhci_hcd
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;[ 3542.969251] usb 2-2: New USB device found, idVendor=1a86, idProduct=7523, bcdDevice= 2.54
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;[ 3542.969266] usb 2-2: New USB device strings: Mfr=0, Product=2, SerialNumber=0
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;[ 3542.969272] usb 2-2: Product: USB2.0-Ser!
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;[ 3542.971132] ch341 2-2:1.0: ch341-uart converter detected
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;[ 3542.971613] ch341-uart ttyUSB0: break control not supported, using simulated break
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;[ 3542.971756] usb 2-2: ch341-uart converter now attached to ttyUSB0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;web-installation&#34;&gt;Web-Installation&lt;/h3&gt;
&lt;p&gt;Die Installaltion erfolggt super einfach mit Chromium Browser über Web-Seite &lt;a href=&#34;https://install.wled.me/&#34;&gt;https://install.wled.me/&lt;/a&gt;
Zuerst wählt man die aktuelle Version z. B. 0.14.0 und nach dem Drücken auf die Schaltfläche &amp;quot;Install&amp;quot; geht es los.
Zuerst muss man den richtige USB Port auswählen, also in userem Fall ttyUSB0.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wled-install0.png&#34; alt=&#34;Web-Seite + USB Port&#34;&gt;&lt;/p&gt;
&lt;p&gt;Dann klick man sich durch die folgenden Fenster.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wled-install1.png&#34; alt=&#34;Web-Seite + USB Port&#34;&gt;
&lt;img src=&#34;../../images/wled-install2.png&#34; alt=&#34;Device Dashboard&#34;&gt;
&lt;img src=&#34;../../images/wled-install3.png&#34; alt=&#34;Confirm installation&#34;&gt;
&lt;img src=&#34;../../images/wled-install4.png&#34; alt=&#34;Installing prepare&#34;&gt;
&lt;img src=&#34;../../images/wled-install5.png&#34; alt=&#34;Installing complete&#34;&gt;&lt;/p&gt;
&lt;p&gt;Dann kann man gleich das eigene WLAN Netzwerk parametrieren in das sich der ESP anmelden soll.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wled-install6.png&#34; alt=&#34;Configure Wi-Fi&#34;&gt;
&lt;img src=&#34;../../images/wled-install7.png&#34; alt=&#34;Connected&#34;&gt;&lt;/p&gt;
&lt;p&gt;Nach dem Speichern muss man sich wieder in seinem Netzwerk anmelden und das Gerät (über Router oder Fing App) suchen bzw. die IP-Adresse herausfinden.&lt;/p&gt;
&lt;h3 id=&#34;manuelle-installation&#34;&gt;Manuelle Installation&lt;/h3&gt;
&lt;p&gt;Anschluss ESP-01 über USB-Adapter und  GPIO2 muss auf Ground gelegt werden (damit man den ESP programmieren kann).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sudo apt-get install python3 python3-pip
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;sudo pip3 install esptool nodemcu-uploader
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;sptool.py -p /dev/ttyUSB0 chip_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;esptool.py v4.6.2
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Serial port /dev/ttyUSB0
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;Connecting...
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;Detecting chip type... Unsupported detection protocol, switching and trying again...
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;Connecting...
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;Detecting chip type... ESP8266
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;Chip is ESP8266EX
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;Features: WiFi
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;Crystal is 26MHz
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;MAC: 6c:df:7f:20:d4:a8
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;Stub is already running. No upload is necessary.
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;Chip ID: 0x0010d458
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;Hard resetting via RTS pin...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Download ESP-01 binary Datei von &lt;a href=&#34;https://github.com/Aircoookie/WLED/releases&#34;&gt;https://github.com/Aircoookie/WLED/releases&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;wget https://github.com/Aircoookie/WLED/releases/download/v0.14.0/WLED_0.14.0_ESP01.bin
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;esptool.py -p /dev/ttyUSB0 write_flash 0x0 ./WLED_0.14.0_ESP01.bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;esptool.py v4.6.2
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Serial port /dev/ttyUSB0
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;Connecting...
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;Detecting chip type... Unsupported detection protocol, switching and trying again...
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;Connecting...
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;Detecting chip type... ESP8266
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;Chip is ESP8266EX
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;Features: WiFi
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;Crystal is 26MHz
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;MAC: 6c:df:7f:20:d4:a8
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;Stub is already running. No upload is necessary.
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;Configuring flash size...
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;Flash will be erased from 0x00000000 to 0x000d0fff...
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;Compressed 854000 bytes to 619031...
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;Wrote 854000 bytes (619031 compressed) at 0x00000000 in 54.8 seconds (effective 124.8 kbit/s)...
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;Hash of data verified.
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;Leaving...
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;Hard resetting via RTS pin...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ESP-01 abstecken und entfernen der Ground Verbindung von GPIO2 sowie RXD und TXD.&lt;/p&gt;
&lt;p&gt;Nun kann man den WLAN AccessPoint WLED-AP finden. Bei der Verbindung muss man das Password &lt;strong&gt;wled1234&lt;/strong&gt; eingeben.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wled-ap-wled.png&#34; alt=&#34;WLED AP&#34;&gt;&lt;/p&gt;
&lt;p&gt;Das Web-Interface ist nun unter http://4.3.2.1/ errreichbar.
Nun kann man sein eigenes WLAN-Netzwerk einrichten damit sich der ESP damit verbinden kann.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wled-ap-configuration.png&#34; alt=&#34;WiFi configuration&#34;&gt;&lt;/p&gt;
&lt;p&gt;Nach dem Speichern muss man sich wieder in seinem Netzwerk anmelden und das Gerät (über Router oder Fing App) suchen bzw. die IP-Adresse herausfinden.&lt;/p&gt;
&lt;h2 id=&#34;wled-konfiguration&#34;&gt;WLED Konfiguration&lt;/h2&gt;
&lt;p&gt;Auf der ersten Seite kann man sich verschiedene Presets anlegen (ID und Name) und die gewünschten Effekte, Farben und Muster auswählen.
Man kann sich hier auch einen &amp;quot;Ausgeschaltet&amp;quot; Preset anlegen, ich verwende dazu ID 99.
Unter der Schatfläche Config können wir verschiedene Einstellungen vornehmen.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wled-presets.png&#34; alt=&#34;Presets&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;uhrzeit-und-zeitsteuerung&#34;&gt;Uhrzeit und Zeitsteuerung&lt;/h3&gt;
&lt;p&gt;Unter &amp;quot;Config&amp;quot;/&amp;quot;Time &amp;amp; Macros&amp;quot; können wir einen neuen NTP-Server eingeben, z. B. 0.at.pool.ntp.org.
Wichtiger ist allerdings die Zeitzone für Zentral-Europa also CET/CEST zu setzen, dann sollte die angezeigte Zeit bereits stimmen.&lt;br&gt;
Weiter unten kann man dann auch zeitgesteuert den Streifen ein- und ausschalten bzw auch verschiedene Presets laden.&lt;/p&gt;
&lt;h3 id=&#34;led-strom-begrenzen&#34;&gt;LED Strom begrenzen&lt;/h3&gt;
&lt;p&gt;Da wir keine Leistungfähiges gesondertes Netzteil einsetzen sollte man den Strom der LEDs begrenzen.
Das kann ünter &amp;quot;Config&amp;quot;/&amp;quot;LED Preferences&amp;quot; gemacht werden.&lt;/p&gt;
&lt;p&gt;Enable automatic brightness limiter: Ja&lt;br&gt;
Maximum Current: 650 mA&lt;br&gt;
LED voltage (Max. current for a single LED): 5V (efficient (35mA)&lt;/p&gt;
&lt;p&gt;Mit der Schaltfläche Save ganz oben oder ganz unten kann man die Einstellungen sichern.&lt;/p&gt;
&lt;h3 id=&#34;backup&#34;&gt;Backup&lt;/h3&gt;
&lt;p&gt;Hat man alles eingerichtet kann man sich die Presets und Konfigurationen unter  &amp;quot;Config&amp;quot;/&amp;quot;Security &amp;amp; Update&amp;quot; mit der Schaltfläche &amp;quot;Backup presets&amp;quot; und &amp;quot;Backup configuration&amp;quot; lokal speichern. Mit den entsprechenden &amp;quot;Upload&amp;quot; Schlatflächen können sie wieder eingespielt werden.&lt;/p&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
